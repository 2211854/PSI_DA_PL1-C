//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RestGest
{
    using System;
    using System.Collections.Generic;
    
    public partial class RestauranteSet
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public RestauranteSet()
        {
            this.PedidoSet = new HashSet<PedidoSet>();
            this.PessoaSet_Trabalhador = new HashSet<PessoaSet_Trabalhador>();
            this.ItemMenuSet = new HashSet<ItemMenuSet>();
        }
    
        public int Id { get; set; }
        public string Nome { get; set; }
        public int Morada_Id { get; set; }
    
        public virtual MoradaSet MoradaSet { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PedidoSet> PedidoSet { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<PessoaSet_Trabalhador> PessoaSet_Trabalhador { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<ItemMenuSet> ItemMenuSet { get; set; }

        public int GetNumeroTrabalhadores()
        {
            int numero = 0;
            foreach (PessoaSet_Trabalhador trabalhador in this.PessoaSet_Trabalhador)
            {
                if (trabalhador.PessoaSet.Ativo)
                {
                    numero++;
                }
            }
            return numero;
        }

        public int GetNumeroPedidos()
        {
            int numero = 0;
            numero = PedidoSet.Count();
            return numero;
        }

        public float GetTotalFaturado()
        {
            float valor = 0;
            foreach(PedidoSet pedido in this.PedidoSet)
            {

                valor = valor + pedido.ValorTotal;
            }
            return valor;
        }

        public int GetTotalSalarios()
        {
            int valor = 0;
            foreach (PessoaSet_Trabalhador trabalhador in this.PessoaSet_Trabalhador)
            {
                if (trabalhador.PessoaSet.Ativo)
                {
                    valor = valor + trabalhador.Salario;
                }
            }
            return valor;
        }


        public override string ToString(){
            return this.Nome;
        }
    }
}
